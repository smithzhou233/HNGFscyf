<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hngf.mapper.sys.EvaluateIndexMapper">


    <select id="findList" resultType="com.hngf.entity.sys.EvaluateIndex">
		select * from sys_evaluate_index
        where del_flag = 0
	</select>

    <select id="findById" resultType="com.hngf.entity.sys.EvaluateIndex" parameterType="Long">
		select * from sys_evaluate_index
        where del_flag = 0 and evaluate_index_id = #{id}
	</select>

    <insert id="add" parameterType="com.hngf.entity.sys.EvaluateIndex">
        INSERT INTO sys_evaluate_index (
                                                                company_id
        ,                                evaluate_index_model
        ,                                evaluate_index_type
        ,                                evaluate_index_content
        ,                                evaluate_index_score
        ,                                evaluate_index_remark
        ,                                created_time
        ,                                created_by
        ,                                updated_time
        ,                                updated_by
        ,                                del_flag
                                )
        VALUES (
                                                            #{companyId}
        ,                                  #{evaluateIndexModel}
        ,                                  #{evaluateIndexType}
        ,                                  #{evaluateIndexContent}
        ,                                  #{evaluateIndexScore}
        ,                                  #{evaluateIndexRemark}
        ,                                  #{createdTime}
        ,                                  #{createdBy}
        ,                                  #{updatedTime}
        ,                                  #{updatedBy}
        ,                                  #{delFlag}
                                  )

    </insert>

    <update id="update" parameterType="com.hngf.entity.sys.EvaluateIndex">
                    UPDATE sys_evaluate_index SET
                            <if test="companyId != null and companyId != ''">
                            company_id = #{companyId} ,
                            </if>
                            <if test="evaluateIndexModel != null and evaluateIndexModel != ''">
                            evaluate_index_model = #{evaluateIndexModel} ,
                            </if>
                            <if test="evaluateIndexType != null and evaluateIndexType != ''">
                            evaluate_index_type = #{evaluateIndexType} ,
                            </if>
                            <if test="evaluateIndexContent != null and evaluateIndexContent != ''">
                            evaluate_index_content = #{evaluateIndexContent} ,
                            </if>
                            <if test="evaluateIndexScore != null and evaluateIndexScore != ''">
                            evaluate_index_score = #{evaluateIndexScore} ,
                            </if>
                            <if test="evaluateIndexRemark != null and evaluateIndexRemark != ''">
                            evaluate_index_remark = #{evaluateIndexRemark} ,
                            </if>
                            <if test="createdTime != null">
                            created_time = #{createdTime} ,
                            </if>
                            <if test="createdBy != null and createdBy != ''">
                            created_by = #{createdBy} ,
                            </if>
                            <if test="updatedTime != null">
                            updated_time = #{updatedTime} ,
                            </if>
                            <if test="updatedBy != null and updatedBy != ''">
                            updated_by = #{updatedBy} ,
                            </if>
                            <if test="delFlag != null and delFlag != ''">
                            del_flag = #{delFlag}
                            </if>
                     where evaluate_index_id = #{evaluateIndexId}
    </update>

    <update id="deleteById" parameterType="Long">
        UPDATE sys_evaluate_index SET
        del_flag = 1
        where evaluate_index_id = #{id}
    </update>

    <update id="deleteByIds" parameterType="java.util.List">
        UPDATE sys_evaluate_index SET
        del_flag = 1
        where evaluate_index_id in
        <foreach collection="ids" item="id" open="(" close=")" separator="," index="idx">
            #{id}
        </foreach>
    </update>

    <select id="getEvaluateTypeByCompanyId" parameterType="java.lang.Long" resultType="java.lang.String">
         select GROUP_CONCAT(evaluate_index_model)  from (select evaluate_index_model ,max(company_id) as id  from  sys_evaluate_index where company_id = #{companyId}  GROUP BY evaluate_index_model ) e GROUP BY e.id
    </select>

    <update id="deleteBatchByCompanyId" parameterType="java.lang.Long">
        UPDATE sys_evaluate_index SET
        del_flag = 1 , updated_by = #{updatedBy} ,updated_time = now()
        WHERE company_id = #{companyId}
    </update>

    <insert id="addBatch" parameterType="java.util.List">
        INSERT INTO sys_evaluate_index (
        company_id
        , evaluate_index_model
        , evaluate_index_type
        , evaluate_index_content
        , evaluate_index_score
        , evaluate_index_remark
        , created_time
        , created_by
        , updated_time
        , updated_by
        , del_flag
        )
        VALUES
        <foreach collection="evaluateIndexList" item="item" index="index" separator=",">
            (#{item.companyId}
            , #{item.evaluateIndexModel}
            , #{item.evaluateIndexType}
            , #{item.evaluateIndexContent}
            , #{item.evaluateIndexScore}
            , #{item.evaluateIndexRemark}
            , #{item.createdTime}
            , #{item.createdBy}
            , #{item.updatedTime}
            , #{item.updatedBy}
            , #{item.delFlag}
            )
        </foreach>
    </insert>

</mapper>